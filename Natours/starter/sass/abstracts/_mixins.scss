@mixin clearfix {
    &::after {
        content: "";
        display: table;
        clear: both;
    }
}
@mixin absCenter {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}


// MEDIA QUERY MANAGER (Desktop first approach)
/*
0px - 600px:        Phone
600px - 900px:      Tablet portrait
900px - 1200px:     Tablet landscape
[1200px - 1800px]:  DEFAULT STYLES
1800px+:            Big Desktops
*/

// @mixin respond-phone {
//     @media (max-width: 600px) {
//         @content; // This directive allows to pass content to it when this mixin is used;
//     }
// }
/*
$breakpoint argument choices;
- phone
- tab-port
- tab-land
- big-desktop

ORDER: Base + typography > general layout + grid > page layout > components
1em = 16px

 only screens means it only applies to screens and if someone tries to print this out it will not apply
*/

@mixin respond($breakpoint) { 
    @if $breakpoint == phone { // If $breakpoint equals phone it will apply this mixin;
        @media only screen and (max-width: 37.5em) { // 600px
            @content; // This directive allows to pass content to it when this mixin is used;
        }
    }
    @if $breakpoint == tab-port { // If $breakpoint equals phone it will apply this mixin;
        @media only screen and (max-width: 56.25em) { // 900px
            @content; // This directive allows to pass content to it when this mixin is used;
        }
    }
    @if $breakpoint == tab-land { // If $breakpoint equals phone it will apply this mixin;
        @media only screen and (max-width: 75em) { // 1200px
            @content; // This directive allows to pass content to it when this mixin is used;
        }
    }
    @if $breakpoint == big-desktop { // If $breakpoint equals phone it will apply this mixin;
        @media only screen and (min-width: 125.5em) { // 1800px
            @content; // This directive allows to pass content to it when this mixin is used;
        }
    }
}