
body {
    font-family: "Lato", sans-serif;
    /* All the child elements will inherit font from the this element */
    font-weight: 400;
    /* font-weight: 16px; */
    line-height: 1.7;
    color: $color-grey-dark;

}
.heading-primary {
    color: $color-white;
    text-transform: uppercase;

    backface-visibility: hidden;
    /* Determines whether or not the 'back' side of a transformed element is visible when facing the viewer. 
    With an identity transform, the front side of an element faces the viewer. */


    margin-bottom: 6rem;
    &--main {
        display: block;
        /* By default span elements are inline elements */
        font-size: 6rem;
        font-weight: 400;
        letter-spacing: 3.5rem;
    
        animation-name: moveInLeft;
        animation-duration: 1s;
        animation-timing-function: ease-out;
        
        @include respond(phone) { // Decreases font size and letter spacing
            letter-spacing: 1rem; 
            font-size: 5rem;
        }
        
        /* animation-timing-function: ease-in; animation behaviour over the cycle */
        /* animation-iteration-count: 3;  how many times animation happens*/
        /* animation-delay: 3s; delay before animation starts */
    }
    
    &--sub {
        display: block;
        font-size: 2rem;
        font-weight: 700;
        letter-spacing: 1.75rem;
    
        animation-name: moveInRight;
        animation-duration: 1s;
        animation-timing-function: ease-out;

        @include respond(phone) {
            letter-spacing: .5rem;
        }
    }
    
}
.heading-secondary {
    font-size: 3.5rem;
    text-transform: uppercase;
    font-weight: 700;
    display: inline-block; 
    background-image: linear-gradient(to right, $color-primary-light, $color-primary-dark);
    -webkit-background-clip: text; // Clips the background just as a text
    color: transparent; 
    letter-spacing: .2rem;
    transition: all .2s;

    @include respond(tab-port) {
        font-size: 3rem;
    }
    @include respond(phone) {
        font-size: 2.5rem;
    }

    &:hover {
        transform: skewY(2deg) skewX(15deg) scale(1.1); // skew() makes element skew, scale() makes element bigger by passed value
        text-shadow: .5rem 1rem 2rem rgba($color-black, .2);
    }
}
.heading-tertiary {
    font-size: $default-font-size;
    font-weight: 700;
    text-transform: uppercase;
}
.paragraph {
    font-size: 1.6rem;
    &:not(:last-child) {
        margin-bottom: 3rem;
    }
}